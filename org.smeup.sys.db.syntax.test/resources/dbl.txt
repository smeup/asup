SELECT :v1, SUM(:v2) as TOTPES INTO :ds FROM FILE00 GROUP BY :v1 HAVING SUM(:v2) >= 1000 ORDER BY :v3 DESC
SET TRANSACTION ISOLATION LEVEL NO COMMIT
EXECUTE IMMEDIATE :v1
OPEN c1 USING DESCRIPTOR :sqlda
PREPARE s1 INTO :sqlda USING NAMES FROM :v1
DECLARE c1 DYNAMIC SCROLL CURSOR FOR (SELECT A, B, C FROM FILE)
DESCRIBE s1 INTO :sqlda USING SYSTEM NAMES
FETCH NEXT FROM c1 FOR 1 ROWS USING DESCRIPTOR :sqlda INTO :ds
CLOSE c1
SELECT A, B, C INTO :v1, :v2, :v3 FROM FILE00
SELECT * INTO :ds FROM FILE00
SELECT BRARTI0F.* INTO :ds FROM FILE00
SELECT BRARTI0F.*, V5RDOC0F INTO :ds FROM file
SELECT :v1, SUM(:v2) as TOTPES INTO :ds FROM FILE00 GROUP BY :v1 HAVING SUM(:v2) >= 1000 ORDER BY :v3 DESC
SELECT A, B, C FROM FILE00
SELECT * FROM FILE00
SELECT BRARTI0F.* FROM FILE00
SELECT BRARTI0F.*, V5RDOC0F FROM file
SELECT :v1, SUM(:v2) as TOTPES FROM FILE00 GROUP BY :v1 HAVING SUM(:v2) >= 1000 ORDER BY :v3 DESC
INSERT INTO table2 (A) SELECT B FROM table1
SET TRANSACTION ISOLATION LEVEL NO COMMIT
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
EXECUTE STMT
EXECUTE IMMEDIATE :QSTRING
EXECUTE IMMEDIATE (INSERT INTO WORK_TABLE SELECT * FROM EMPROJACT)
OPEN DYN_CURSOR USING :HV_INT, :HV_VCHAR64
OPEN DYN_CURSOR USING DESCRIPTOR :SQLDA
PREPARE STMT1_NAME FROM :STMT1_STR
DECLARE C1 CURSOR FOR OBJ_STMT
DECLARE C04 CURSOR FOR select distinct H§CDMG from M5CONS0L where H§SCEN=:VASCEN 
DESCRIBE STMT1_NAME INTO :SQLDA
DESCRIBE SelectStm USING SQL DESCRIPTOR LOCAL 'SQLDDescr' 
FETCH C1 INTO :XUTX, :XCON, :XDAT
FETCH C1 INTO :XUTX
FETCH First From DSQLCursor Into SQL DESCRIPTOR 'SQLDDescr'
Set Option SQLPATH = *LIBL, Naming = *SYS, Commit = *NONE, UsrPrf = *OWNER, DynUsrPrf = *OWNER, CloSqlCsr = *ENDACTGRP
SET OPTION DATFMT = *EUR, COMMIT = *CS, DECMPT = *COMMA
CLOSE C1
ALLOCATE SQL DESCRIPTOR LOCAL 'SQLDDescr' WITH MAX :NR
ALLOCATE DESCRIPTOR LOCAL 'SQLDDescr' WITH MAX 20
ALLOCATE DESCRIPTOR 'SQLDDescr'
DEALLOCATE SQL DESCRIPTOR LOCAL 'SQLDDescr'
GET DESCRIPTOR 'SQLDDescr' LOCAL :nNcol = COUNT
GET DESCRIPTOR LOCAL 'SQLDDescr' :nNcol = COUNT, :nNcol2 = DB2_CURSOR_HOLDABILITY
GET DESCRIPTOR 'SQLDDescr' VALUE :$I :TTYPE = Type, :TCCSID = DB2_CCSID, :TLENGTH = Length, :TPRECISION = PRECISION, :TSCALE = SCALE, :TSNAME = DB2_SYSTEM_COLUMN_NAME , :TLABEL = DB2_LABEL, :TNAME = NAME, :TTDATETIME = DATETIME_INTERVAL_CODE, :TNULLABLE = NULLABLE 
SET DESCRIPTOR 'SQLDDescr' VALUE :$I   Type = :ciso_DATE_TIME, DATETIME_INTERVAL_CODE = :TTDATETIME, DB2_CCSID = :TCCSID 
SET DESCRIPTOR 'SQLDDescr' VALUE :$I   Type = :ciso_DATE_TIME, DATETIME_INTERVAL_CODE = :TTDATETIME, DB2_CCSID = VAL 
GET DIAGNOSTICS CONDITION 1 :sNCol = DB2_ORDINAL_TOKEN_2
GET DIAGNOSTICS CONDITION :VAR1 :sNCol = DB2_ORDINAL_TOKEN_2, :sNCol2 = DB2_ERROR_CODE3
EXECUTE STMT USING :$IQRIK, :§VAL 
EXECUTE STMT USING DESCRIPTOR :sqlda